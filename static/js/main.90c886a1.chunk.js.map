{"version":3,"sources":["materialForm.js","materialList.js","productForm.js","productQuantityForm.js","productList.js","save.js","obj.js","sell.js","app.js","reportWebVitals.js","index.js"],"names":["MaterialForm","_ref","isUpdateForm","onAdd","onCancel","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","quantity","setQuantity","_useState5","_useState6","price","setPrice","isFormValid","React","createElement","className","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","required","disabled","onClick","MaterialList","materials","onDelete","onUpdate","materialToUpdate","setMaterialToUpdate","key","setKey","length","map","material","getPriceForMaterial","newMaterial","updatedMaterial","updatedMaterials","ProductForm","productToUpdate","productName","setProductName","productQuantity","setProductQuantity","_useState7","_useState8","selectedMaterials","setSelectedMaterials","_useState9","_useState10","materialQuantities","setMaterialQuantities","_useState11","_useState12","setMaterialInputs","_useState13","_useState14","formErrors","setFormErrors","useEffect","errors","trim","isNaN","Number","materialErrors","forEach","materialName","Object","keys","validateForm","selectedMaterialObjects","find","m","_objectSpread","reduce","total","toFixed","newProduct","multiple","options","newSelectedMaterials","newMaterialQuantities","_loop","option","i","selected","push","defaultQuantity","index","indexOf","splice","concat","prevMaterialQuantities","_defineProperty","handleQuantityChange","ProductQuantityForm","props","selectedProduct","setSelectedProduct","desiredQuantity","setDesiredQuantity","requiredMaterials","setRequiredMaterials","isModalOpen","setIsModalOpen","calculateRequiredMaterials","product","products","p","onClose","show","entries","_ref2","window","print","renderModal","ProductList","setProductToUpdate","productsList","setProductsList","materialsList","showMaterials","setShowMaterials","handleCancel","handleProductUpdate","updatedProduct","updatedProducts","console","log","handleProductAdd","prevProducts","_toConsumableArray","calculateCosts","Button","variant","size","materialsArray","values","getMaterialsInfo","handleEdit","productToDelete","filter","handleProductDelete","LocalStorageHandler","localStorage","setItem","JSON","stringify","initialMaterials","initialProducts","mcu","totalPrice","mcuObj","materialCost","SellProduct","sellPrice","setSellPrice","calculateProductPrice","productId","min","max","findIndex","slice","App","storedMaterials","getItem","parse","setMaterials","storedProducts","setProducts","showMaterialList","showProductList","showSell","showHome","sidebarOpen","setSidebarOpen","_useState15","_useState16","showCalculate","handleUpdateProduct","useNavigate","src","frameBorder","Link","to","Routes","Route","path","element","materialToDelete","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.90c886a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './css/material.css';\r\n\r\nfunction MaterialForm({ isUpdateForm, onAdd, onCancel }) {\r\n  const [name, setName] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    setQuantity(event.target.value);\r\n  };\r\n\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    onAdd({ name, quantity, price });\r\n  };\r\n\r\n  const isFormValid = name !== '' && quantity !== '' && price !== '';\r\n\r\n  return (\r\n    <form className=\"material-form\" onSubmit={handleFormSubmit}>\r\n      <h3 className=\"form-title\">{isUpdateForm ? 'Update Material' : 'Add Material'}</h3>\r\n      <div className=\"form-input\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" value={name} onChange={handleNameChange} required />\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <label htmlFor=\"quantity\">Quantity:</label>\r\n        <input type=\"number\" id=\"quantity\" value={quantity} onChange={handleQuantityChange} required />\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <label htmlFor=\"price\">Price:</label>\r\n        <input type=\"number\" id=\"price\" value={price} onChange={handlePriceChange} required />\r\n      </div>\r\n      <div className=\"form-buttons\">\r\n        <button className=\"form-button form-submit\" type=\"submit\" disabled={!isFormValid}>\r\n          {isUpdateForm ? 'Update' : 'Add'}\r\n        </button>\r\n        <button className=\"form-button form-cancel\" type=\"button\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MaterialForm;\r\n","import React, { useState } from 'react';\r\nimport MaterialForm from './materialForm';\r\nimport MaterialActions from './materialActions';\r\n//import {StyleSheet} from 'react-native'\r\n//import './materialList.css';\r\n\r\nfunction MaterialList({ materials, onDelete, onUpdate, onAdd }) {\r\n  const [materialToUpdate, setMaterialToUpdate] = useState(null);\r\n  const [key, setKey] = useState(0);\r\n\r\n  const handleEdit = (material) => {\r\n    setMaterialToUpdate(material);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setMaterialToUpdate(null);\r\n    setKey(key + 1);\r\n  };\r\n\r\n  const handleMaterialUpdate = (materialToUpdate, updatedMaterial) => {\r\n    const updatedMaterials = materials.map((material) =>\r\n      material.name === materialToUpdate.name ? updatedMaterial : material\r\n    );\r\n    onUpdate(updatedMaterials);\r\n    setMaterialToUpdate(null);\r\n    setKey(key + 1);\r\n  };\r\n\r\n  const handleMaterialAdd = (newMaterial) => {\r\n    onAdd(newMaterial);\r\n    setMaterialToUpdate(null);\r\n    setKey(key + 1);\r\n  };\r\n\r\n  const getPriceForMaterial = (material) => {\r\n    return material.quantity * material.price;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className='materials-container'>\r\n  <div className='materials-header'>\r\n    <div>{materials.length} materials</div>\r\n    <div className='material-actions'>\r\n      <button className='btn btn-primary' onClick={() => setMaterialToUpdate(null)}>\r\n        Add Material\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div className='materials-list'>\r\n    {materials.map((material) => (\r\n      <div className='material-card' key={material.name}>\r\n        <div className='material-name'>{material.name}</div>\r\n        <div className='material-details'>\r\n          <div className='material-quantity'>\r\n            <strong>Qty:</strong> {material.quantity}\r\n          </div>\r\n          <div className='material-price'>\r\n            <strong>Price:</strong> {material.price}\r\n          </div>\r\n          <div className='material-ptu'>\r\n            <strong>PTU:</strong> {getPriceForMaterial(material)}\r\n          </div>\r\n        </div>\r\n        <div className='material-actions'>\r\n          <button className='btn btn-info' onClick={() => setMaterialToUpdate(material)}>\r\n            Edit\r\n          </button>\r\n          <button className='btn btn-danger' onClick={() => onDelete(material)}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n<MaterialForm\r\n  key={key}\r\n  onAdd={handleMaterialAdd}\r\n  onUpdate={handleMaterialUpdate}\r\n  materialToUpdate={materialToUpdate}\r\n  onCancel={handleCancel}\r\n  isUpdateForm={!!materialToUpdate}\r\n/>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default MaterialList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './css/material.css'\r\nfunction ProductForm({ materials, onAdd, onUpdate, productToUpdate, onCancel, isUpdateForm }) {\r\n   const [productName, setProductName] = useState(\"\");\r\n   const [selectedOptions, setSelectedOptions] = useState([]);\r\n   const [productQuantity, setProductQuantity] = useState(\"\");\r\n   const [selectedMaterials, setSelectedMaterials] = useState([]);\r\n   const [materialQuantities, setMaterialQuantities] = useState({});\r\n   const [materialInputs, setMaterialInputs] = useState({});\r\n   const [formErrors, setFormErrors] = useState({});\r\n\r\n   useEffect(() => {\r\n      if (productToUpdate) {\r\n         setProductName(productToUpdate.name);\r\n         setProductQuantity(productToUpdate.quantity);\r\n        \r\n      }\r\n   }, [productToUpdate]);\r\n\r\n   const handleProductNameChange = (event) => {\r\n      setProductName(event.target.value);\r\n   };\r\n\r\n   const handleProductQuantityChange = (event) => {\r\n      const value = Number(event.target.value);\r\n\r\n      setProductQuantity(value);\r\n   };\r\n\r\n   const handleQuantityChange = (event, materialName) => {\r\n      const quantity = event.target.value;\r\n\r\n      setMaterialQuantities((prevMaterialQuantities) => ({\r\n         ...prevMaterialQuantities,\r\n\r\n         [materialName]: quantity,\r\n      }));\r\n   };\r\n\r\n   const handleMaterialSelect = (event) => {\r\n      const options = event.target.options;\r\n      const newSelectedMaterials = [];\r\n      const newMaterialQuantities = { ...materialQuantities };\r\n\r\n      for (let i = 0; i < options.length; i++) {\r\n         const option = options[i];\r\n\r\n         if (option.selected) {\r\n            const materialName = option.value;\r\n\r\n            newSelectedMaterials.push(materialName);\r\n\r\n            if (!newMaterialQuantities[materialName]) {\r\n               newMaterialQuantities[materialName] = materials.find((m) => m.name === materialName).defaultQuantity;\r\n            }\r\n         } else {\r\n            const materialName = option.value;\r\n            const index = newSelectedMaterials.indexOf(materialName);\r\n\r\n            if (index > -1) {\r\n               newSelectedMaterials.splice(index, 1);\r\n               delete newMaterialQuantities[materialName];\r\n            }\r\n         }\r\n      }\r\n\r\n      setSelectedMaterials(newSelectedMaterials);\r\n      setMaterialQuantities(newMaterialQuantities);\r\n      setMaterialInputs({});\r\n   };\r\n\r\n   useEffect(() => {\r\n      setFormErrors({});\r\n   }, [selectedMaterials, materialQuantities]);\r\n\r\n   const validateForm = () => {\r\n      const errors = {};\r\n\r\n      if (productName.trim() === \"\") {\r\n         errors.productName = \"Product name is required\";\r\n      }\r\n\r\n      if (productQuantity === \"\") {\r\n         errors.productQuantity = \"Quantity is required\";\r\n      } else if (isNaN(productQuantity)) {\r\n         errors.productQuantity = \"Quantity must be a number\";\r\n      } else if (Number(productQuantity) <= 0) {\r\n         errors.productQuantity = \"Quantity must be greater than 0\";\r\n      }\r\n\r\n      if (selectedMaterials.length === 0) {\r\n         errors.materials = \"At least one material must be selected\";\r\n      }\r\n\r\n      let materialErrors = {};\r\n\r\n      selectedMaterials.forEach((materialName) => {\r\n         if (materialQuantities[materialName] === \"\") {\r\n            materialErrors[materialName] = \"Quantity is required\";\r\n         } else if (isNaN(materialQuantities[materialName])) {\r\n            materialErrors[materialName] = \"Quantity must be a number\";\r\n         } else if (Number(materialQuantities[materialName]) <= 0) {\r\n            materialErrors[materialName] = \"Quantity must be greater than 0\";\r\n         }\r\n      });\r\n\r\n      if (Object.keys(materialErrors).length > 0) {\r\n         errors.materials = materialErrors;\r\n      }\r\n\r\n      setFormErrors(errors);\r\n\r\n      return Object.keys(errors).length === 0;\r\n   };\r\n\r\n   const handleAddProduct = (event) => {\r\n      event.preventDefault();\r\n\r\n      const isValid = validateForm();\r\n\r\n      if (isValid) {\r\n         const selectedMaterialObjects = selectedMaterials.map((materialName) => {\r\n            const material = materials.find((m) => m.name === materialName);\r\n\r\n            return { ...material, quantity: Number(materialQuantities[materialName]) };\r\n         });\r\n\r\n         const materialsCost = selectedMaterialObjects.reduce(\r\n            (total, material) => total + material.quantity * material.price,\r\n\r\n            0\r\n         );\r\n\r\n         const price = (materialsCost / Number(productQuantity)).toFixed(2);\r\n\r\n         const newProduct = {\r\n            name: productName,\r\n            quantity: Number(productQuantity),\r\n            materials: selectedMaterialObjects,\r\n            price: price,\r\n         };\r\n\r\n         onAdd(newProduct);\r\n\r\n         setProductName(\"\");\r\n\r\n         setProductQuantity(\"\");\r\n\r\n         setSelectedMaterials([]);\r\n\r\n         setMaterialQuantities({});\r\n      }\r\n   };\r\n\r\n   return (\r\n      <form className=\"add-product-form\" onSubmit={handleAddProduct}>\r\n         <h3>{isUpdateForm ? \"Update Product\" : \"Add Product\"}</h3>\r\n         <div>\r\n            <label htmlFor=\"productName\">Product Name:</label>\r\n\r\n            <input type=\"text\" id=\"productName\" value={productName} onChange={handleProductNameChange} />\r\n\r\n            {formErrors.productName && <p className=\"error-message\">{formErrors.productName}</p>}\r\n         </div>\r\n\r\n         <div>\r\n            <label htmlFor=\"productQuantity\">Quantity:</label>\r\n\r\n            <input type=\"text\" id=\"productQuantity\" value={productQuantity} onChange={handleProductQuantityChange} />\r\n\r\n            {formErrors.productQuantity && <p className=\"error-message\">{formErrors.productQuantity}</p>}\r\n         </div>\r\n\r\n         <div>\r\n            <label htmlFor=\"materials\">Materials:</label>\r\n\r\n            <select className=\"form-control\" id=\"materials\" multiple={true} value={selectedMaterials} onChange={handleMaterialSelect}>\r\n               {materials.map((material) => (\r\n                  <option key={material.name} value={material.name}>\r\n                     {material.name}\r\n                  </option>\r\n               ))}\r\n            </select>\r\n\r\n            {formErrors.materials && typeof formErrors.materials === \"string\" && <p className=\"error-message\">{formErrors.materials}</p>}\r\n\r\n            {formErrors.materials && typeof formErrors.materials === \"object\" && (\r\n               <ul>\r\n                  {selectedMaterials.map((materialName) => (\r\n                     <li className=\"error-message\" key={materialName}>\r\n                        {materialName}: {formErrors.materials[materialName]}\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            )}\r\n         </div>\r\n\r\n         {selectedMaterials.map((materialName) => (\r\n            <div key={materialName}>\r\n               <label htmlFor={`quantity-${materialName}`}>{materialName} Quantity:</label>\r\n               <input type=\"text\" id={`quantity-${materialName}`} value={materialQuantities[materialName] || \"\"} onChange={(event) => handleQuantityChange(event, materialName)} />\r\n               {formErrors.materials && formErrors.materials[materialName] && <p className=\"error-message\">{formErrors.materials[materialName]}</p>}\r\n            </div>\r\n         ))}\r\n\r\n         <div>\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n               <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n         </div>\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default ProductForm;\r\n","import React, { useState } from 'react';\r\nimport './css/print.css'\r\nimport './css/mqc.css'\r\n\r\nfunction renderModal(materials, onClose, selectedProduct) {\r\n  const show = materials ? \"show\" : \"\";\r\n  return (\r\n    <div className={`modal ${show}`} onClick={onClose}>\r\n    <div className=\"modal-dialog\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h2>Required Materials for: <span className='selected-product'>{selectedProduct}</span> </h2>\r\n          <button type=\"button\" className=\"close\" onClick={onClose}>\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          {Object.entries(materials).map(([material, quantity]) => (\r\n            <div key={material}>\r\n              {material}: {quantity}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button className=\"btn btn-primary\">\r\n            <i className='fas fa-print'  onClick={() => window.print()}></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\n\r\nfunction ProductQuantityForm(props) {\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [desiredQuantity, setDesiredQuantity] = useState('');\r\n  const [requiredMaterials, setRequiredMaterials] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleProductChange = (event) => {\r\n    setSelectedProduct(event.target.value);\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    setDesiredQuantity(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (selectedProduct && desiredQuantity) {\r\n      const product = props.products.find((p) => p.name === selectedProduct);\r\n      if (product) {\r\n        const materials = calculateRequiredMaterials(product, desiredQuantity);\r\n        setRequiredMaterials(materials);\r\n        setIsModalOpen(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateRequiredMaterials = (product, desiredQuantity) => {\r\n    const materials = {};\r\n    product.materials.forEach((material) => {\r\n      materials[material.name] = material.quantity * desiredQuantity;\r\n    });\r\n    return materials;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setRequiredMaterials(null);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className='mqc-c form-group'>\r\n      <form className=\"mqc\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          \r\n          <label htmlFor=\"product-select\">Select a product:</label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"product-select\"\r\n            value={selectedProduct}\r\n            onChange={handleProductChange}\r\n          >\r\n            \r\n            <option value=\"\">-- Select a product -- </option>\r\n            {props.products.map((product) => (\r\n              <option key={product.name} value={product.name}>\r\n                {product.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"quantity-input\">Desired quantity:</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"quantity-input\"\r\n            value={desiredQuantity}\r\n            onChange={handleQuantityChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          <i className='fas fa-calculator' />\r\n        </button>\r\n      </form>\r\n      {isModalOpen && renderModal(requiredMaterials, closeModal,selectedProduct)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductQuantityForm;\r\n","import React, { useState } from \"react\";\r\nimport ProductForm from \"./productForm\";\r\nimport ProductQuantityForm from \"./productQuantityForm\";\r\nimport { Card, Button, Accordion } from \"react-bootstrap\";\r\nimport './css/product.css'\r\nfunction ProductList({ products, onDelete, onUpdate, materials }) {\r\n  const [productToUpdate, setProductToUpdate] = useState(null);\r\n  const [productsList, setProductsList] = useState(products);\r\n  const [materialsList, setMaterialsList] = useState(materials);\r\n  const [showMaterials, setShowMaterials] = useState(false);\r\n\r\n  const handleEdit = (product) => {\r\n    setProductToUpdate(product);\r\n    console.log(\"handleEdit\", product);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setProductToUpdate(null);\r\n  };\r\n\r\n  const handleProductUpdate = (productToUpdate, updatedProduct) => {\r\n    const updatedProducts = productsList.map((product) => (product === productToUpdate ? updatedProduct : product));\r\n    console.log(productToUpdate, \"pl\");\r\n    onUpdate(updatedProducts);\r\n    setProductToUpdate(null);\r\n    setProductsList(updatedProducts);\r\n  };\r\n\r\n  const handleProductDelete = (productToDelete) => {\r\n    const updatedProducts = productsList.filter((product) => product !== productToDelete);\r\n    onDelete(updatedProducts);\r\n    setProductsList(updatedProducts);\r\n  };\r\n\r\n  const handleProductAdd = (product, selectedMaterials) => {\r\n    const newProduct = {\r\n      id: productsList.length + 1,\r\n      name: product.name,\r\n      materials: product.materials,\r\n      quantity: product.quantity,\r\n      price: product.price,\r\n    };\r\n    setProductsList((prevProducts) => [...prevProducts, newProduct]);\r\n  };\r\n\r\n  const getMaterialsInfo = (selectedMaterials) => {\r\n    if (!selectedMaterials || typeof selectedMaterials !== \"object\") {\r\n      return \"\";\r\n    }\r\n\r\n    const materialsArray = Object.values(selectedMaterials).map((material) => (\r\n      <div className=\"material-item\" key={material.name}>\r\n        <div className=\"material-name\">{material.name}</div>\r\n        <div className=\"material-quantity\">{material.quantity}</div>\r\n      </div>\r\n    ));\r\n\r\n    if (materialsArray.length === 0) {\r\n      return \"\";\r\n    }\r\n\r\n    return <div className=\"material-list\">{materialsArray}</div>;\r\n  };\r\n\r\n  function calculateCosts(product) {\r\n    let total = 0;\r\n    product.materials.forEach((material) => {\r\n      total += material.price * (material.quantity / product.quantity);\r\n    });\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <div className=\"product-list\">\r\n        {productsList.map((product, index) => (\r\n          <div className=\"product-card\" key={`${product.name}-${index}`}>\r\n            <div className=\"product-header\">\r\n              <div className=\"product-name\">{product.name}</div>\r\n              <div className=\"product-qty\">{product.quantity}</div>\r\n              <div className=\"product-cost\">${calculateCosts(product)}</div>\r\n            </div>\r\n            <div className=\"product-body\">\r\n              <div className=\"product-materials\">\r\n                <div className=\"materials-header\">\r\n                  <div>Materials:</div>\r\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => setShowMaterials(!showMaterials)}>\r\n                    {showMaterials ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </div>\r\n                {showMaterials && getMaterialsInfo(product.materials)}\r\n              </div>\r\n             \r\n              <div className=\"product-buttons\">\r\n                <Button variant=\"outline-primary\" onClick={() => handleEdit(product)}>\r\n                  Edit\r\n                </Button>\r\n                <Button variant=\"outline-danger\" onClick={() => handleProductDelete(product)}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      {productToUpdate ? (\r\n        <ProductForm product={productToUpdate} onCancel={handleCancel} onUpdate={handleProductUpdate} onAdd={handleProductAdd} materials={materialsList} />\r\n      ) : (\r\n        <div>\r\n          <h3>Products</h3>\r\n          {renderProducts()}\r\n          <ProductForm onCancel={handleCancel} onUpdate={handleProductUpdate} onAdd={handleProductAdd} materials={materialsList} />\r\n          \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from \"react\";\r\n\r\nfunction LocalStorageHandler({ materials, products }) {\r\n    useEffect(() => {\r\n      localStorage.setItem('materials', JSON.stringify(materials));\r\n    }, [materials]);\r\n  \r\n    useEffect(() => {\r\n      localStorage.setItem('products', JSON.stringify(products));\r\n    }, [products]);\r\n  \r\n    return null;\r\n  }\r\n  \r\n  \r\n\r\nexport default LocalStorageHandler;\r\n","export const initialMaterials = [\r\n    { name: 'Water', quantity: 100, price: 5 ,id: 1},\r\n    { name: 'Sugar', quantity: 500, price: 20 ,id: 2},\r\n    { name: 'Lemon Juice', quantity: 250, price: 15 ,id:3},\r\n  ];\r\n  \r\n  export const initialProducts = [\r\n    {\r\n      name: 'Lemonade',\r\n      id: 0,\r\n      materials: [\r\n        { name: 'Water', quantity: 100, price: 300},\r\n        { name: 'Sugar', quantity: 50, price: 20 },\r\n        { name: 'Lemon Juice', quantity: 25, price: 15 }\r\n      ],\r\n      quantity :10,\r\n      price: 0,\r\n      mcu: 0,\r\n      \r\n    },\r\n    {\r\n      name: 'Ice Tea',\r\n      id: 1,\r\n      materials: [\r\n        { name: 'Water', quantity: 100, price: 50 },\r\n        { name: 'Tea Leaves', quantity: 50, price: 30 },\r\n        { name: 'Sugar', quantity: 25, price: 20 }\r\n      ],\r\n      quantity: 20,\r\n      price: 0,\r\n      mcu: 0,\r\n     \r\n    }\r\n  ];\r\n  \r\n  initialProducts.forEach(product => {\r\n    let totalPrice = 0;\r\n    let mcuObj = {};\r\n    \r\n    product.materials.forEach(material => {\r\n      const materialCost = material.quantity * material.price;\r\n      totalPrice += materialCost;\r\n      \r\n      const mcu = material.price * material.quantity /product.quantity;\r\n      mcuObj[material.name] = mcu;\r\n    });\r\n  \r\n    product.price = totalPrice;\r\n    product.mcu = mcuObj;\r\n  });\r\n  ","import React, { useState } from 'react';\r\nimport './css/market.css';\r\n\r\nconst SellProduct = ({ products }) => {\r\n  const [productsList, setProductsList] = useState(products);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [sellPrice, setSellPrice] = useState(0);\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const handleProductChange = (event) => {\r\n    const productId = event.target.value;\r\n    const product = products.find((p) => p.name === productId);\r\n    setSelectedProduct(product);\r\n  };\r\n\r\n  const handleSellPriceChange = (event) => {\r\n    const value = Number(event.target.value);\r\n    setSellPrice(value);\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    const value = Number(event.target.value);\r\n    if (value > selectedProduct.quantity) {\r\n      setQuantity(selectedProduct.quantity);\r\n    } else {\r\n      setQuantity(value);\r\n    }\r\n  };\r\n\r\n  const calculateProductPrice = () => {\r\n    if (!selectedProduct) return 0;\r\n    const { price } = selectedProduct;\r\n    return price - sellPrice;\r\n  };\r\n\r\n  const handleSellProduct = () => {\r\n    if (!selectedProduct) return;\r\n    const updatedProduct = {\r\n      ...selectedProduct,\r\n      price: calculateProductPrice(),\r\n      quantity: selectedProduct.quantity - quantity\r\n    };\r\n    // Find the index of the selected product in the products array\r\n    const index = products.findIndex((p) => p.id === selectedProduct.id);\r\n    // Create a new products array with the updated product at the correct index\r\n    const updatedProducts = [\r\n      ...products.slice(0, index),\r\n      updatedProduct,\r\n      ...products.slice(index + 1),\r\n    ];\r\n    // Update the products state\r\n    setProductsList(updatedProducts);\r\n    // Reset the selected product and sell price\r\n    setSelectedProduct(null);\r\n    setSellPrice(0);\r\n    setQuantity(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"market\">\r\n      <div className=\"product-select\">\r\n        <label htmlFor=\"product-select\">Select a product:</label>\r\n        <select id=\"product-select\" onChange={handleProductChange}>\r\n          <option value=\"\">Select a product</option>\r\n          {products.map((product) => (\r\n            <option key={product.id} value={product.name}>\r\n              {product.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {selectedProduct && (\r\n        <div className=\"product-details\">\r\n          <div className=\"product-info\">\r\n            <h2>{selectedProduct.name}</h2>\r\n            <p>Available Quantity: {selectedProduct.quantity}</p>\r\n          </div>\r\n          <div className=\"sell-details\">\r\n            <div className=\"sell-price\">\r\n              <label htmlFor=\"sell-price\">Sell Price:</label>\r\n              <input\r\n                id=\"sell-price\"\r\n                type=\"number\"\r\n                value={sellPrice}\r\n                onChange={handleSellPriceChange}\r\n              />\r\n            </div>\r\n            <div className=\"quantity-to-sell\">\r\n              <label htmlFor=\"quantity-to-sell\">Quantity:</label>\r\n              <input\r\n                id=\"quantity-to-sell\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max={selectedProduct.quantity}\r\n                value={quantity}\r\n                onChange={handleQuantityChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"sell-button\" onClick={handleSellProduct}>\r\n            Sell\r\n          </button>\r\n          <p className=\"product-price\">Product price: {calculateProductPrice()} p&p</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n \r\n\r\n  );\r\n};\r\n\r\nexport default SellProduct;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialForm from \"./materialForm\";\r\nimport MaterialList from \"./materialList\";\r\nimport ProductForm from \"./productForm\";\r\nimport ProductList from \"./productList\";\r\nimport ProductQuantityForm from \"./productQuantityForm\";\r\nimport LocalStorageHandler from \"./save\";\r\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from \"react-router-dom\";\r\nimport { initialMaterials, initialProducts } from \"./obj.js\";\r\nimport SellProduct from \"./sell\";\r\nimport \"./css/sidebar.css\";\r\n\r\nfunction App() {\r\n  const [materials, setMaterials] = useState(() => {\r\n    const storedMaterials = localStorage.getItem(\"materials\");\r\n    return storedMaterials ? JSON.parse(storedMaterials) : initialMaterials;\r\n  });\r\n  const [products, setProducts] = useState(() => {\r\n    const storedProducts = localStorage.getItem(\"products\");\r\n    return storedProducts ? JSON.parse(storedProducts) : initialProducts;\r\n  });\r\n  const [showMaterialList, setShowMaterialList] = useState(false);\r\n  const [showProductList, setShowProductList] = useState(false);\r\n  const [showSell, setShowSell] = useState(false);\r\n  const [showHome, setShowHome] = useState(false);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  const [showCalculate, setShowCalculate] = useState(false);\r\n  const handleUpdate = (updatedMaterials) => {\r\n    setMaterials(updatedMaterials);\r\n  };\r\n\r\n  const handleDelete = (materialToDelete) => {\r\n    setMaterials(materials.filter((material) => material !== materialToDelete));\r\n  };\r\n\r\n  const handleAdd = (newMaterial) => {\r\n    setMaterials([...materials, newMaterial]);\r\n  };\r\n\r\n  const handleAddProduct = (newProduct) => {\r\n    setProducts([...products, newProduct]);\r\n  };\r\n\r\n  const handleUpdateProduct = (productToUpdate, updatedProduct) => {\r\n    const updatedProducts = products.map((product) => (product === productToUpdate ? updatedProduct : product));\r\n    setProducts(updatedProducts);\r\n  };\r\n\r\n  const handleDeleteProduct = (productToDelete) => {\r\n    setProducts(products.filter((product) => product !== productToDelete));\r\n  };\r\n\r\n  const handleMaterialClick = () => {\r\n    setShowMaterialList(true);\r\n    setShowProductList(false);\r\n  };\r\n\r\n  const handleProductClick = () => {\r\n    setShowMaterialList(false);\r\n    setShowProductList(true);\r\n  };\r\n\r\n  const navigate = useNavigate(); // use the useNavigate hook to navigate\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"date-time\">\r\n        <iframe src=\"https://www.now-time.com/widgetclock/justnumber.php?id=9491&size=33&color=1833AB&format=2&thedatein=5&backcolor=F2F2F2\" frameBorder=\"0\"></iframe>\r\n      </div>\r\n      <LocalStorageHandler materials={materials} products={products} />\r\n      <div className=\"menu-icon\" onClick={toggleSidebar}>\r\n          <i className={`fas ${sidebarOpen ? \"fa-times opening\" : \"fa-bars\"}`}></i>\r\n\r\n          <div className={`sidebar ${sidebarOpen ? \"show\" : \"\"}`}>\r\n       \r\n        <div className=\"menu-items\">\r\n          <Link to=\"/\" className={`menu-item ${showHome ? \"active\" : \"\"}`}>\r\n            <i className=\"fas fa-house\"></i>\r\n            <span>Home</span>\r\n          </Link>\r\n          <Link to=\"/materials\" className={`menu-item ${showMaterialList ? \"active\" : \"\"}`}>\r\n            <i className=\"fas fa-box-open\"></i>\r\n            <span>Materials</span>\r\n          </Link>\r\n          <Link to=\"/products\" className={`menu-item ${showProductList ? \"active\" : \"\"}`}>\r\n            <i className=\"fas fa-box\"></i>\r\n            <span>Products</span>\r\n          </Link>\r\n          <Link to=\"/sell\" className={`menu-item ${showSell ? \"active\" : \"\"}`}>\r\n            <i className=\"fa-solid fa-basket-shopping\"></i>\r\n            <span>Market</span>\r\n          </Link>\r\n          <Link to=\"calculate\" className={`menu-item ${showCalculate ? \"active\" : \"\"}`}>\r\n            <i className=\"fa-solid fa-calculator\"></i>\r\n            <span>Calculate</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      </div>\r\n\r\n      \r\n      <Routes>\r\n        <Route path=\"materials\" element={<MaterialList materials={materials} onDelete={handleDelete} onUpdate={handleUpdate} onAdd={handleAdd} />} />\r\n        <Route path=\"products\" element={<ProductList products={products} onDelete={handleDeleteProduct} onUpdate={handleUpdateProduct} onAdd={handleAddProduct} materials={materials} />} />\r\n        <Route path=\"sell\" element={<SellProduct products={products} onUpdate={handleUpdateProduct} materials={materials} />} />\r\n\r\n        <Route path=\"calculate\" element={<ProductQuantityForm products={products} />} />\r\n        {/* Add more routes as needed */}\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\nimport './css/app.css'\nimport './css/native.css'\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}