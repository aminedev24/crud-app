{"version":3,"sources":["materialForm.js","materialActions.js","materialList.js","productForm.js","productQuantityForm.js","productList.js","save.js","obj.js","app.js","reportWebVitals.js","index.js"],"names":["MaterialForm","_ref","isUpdateForm","onAdd","onCancel","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","quantity","setQuantity","_useState5","_useState6","price","setPrice","isFormValid","React","createElement","className","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","required","disabled","onClick","MaterialActions","material","onDelete","handleEdit","showMenu","setShowMenu","MaterialList","materials","onUpdate","materialToUpdate","setMaterialToUpdate","key","setKey","handleCancel","handleMaterialUpdate","updatedMaterial","updatedMaterials","map","getPriceForMaterial","length","onEdit","Number","_objectSpread","newMaterial","ProductForm","productToUpdate","productName","setProductName","productQuantity","setProductQuantity","_useState7","_useState8","selectedMaterials","setSelectedMaterials","_useState9","_useState10","materialQuantities","setMaterialQuantities","_useState11","_useState12","setMaterialInputs","_useState13","_useState14","formErrors","setFormErrors","useEffect","errors","trim","isNaN","materialErrors","forEach","materialName","Object","keys","validateForm","selectedMaterialObjects","find","m","reduce","total","toFixed","newProduct","multiple","options","newSelectedMaterials","newMaterialQuantities","_loop","option","i","selected","push","defaultQuantity","index","indexOf","splice","concat","prevMaterialQuantities","_defineProperty","handleQuantityChange","ProductQuantityForm","ProductList","products","setProductToUpdate","productsList","setProductsList","materialsList","showMaterials","setShowMaterials","handleProductUpdate","updatedProduct","updatedProducts","product","console","log","handleProductAdd","prevProducts","_toConsumableArray","calculateCosts","Button","variant","size","materialsArray","values","getMaterialsInfo","productToDelete","filter","handleProductDelete","LocalStorageHandler","localStorage","setItem","JSON","stringify","initialMaterials","initialProducts","mcu","totalPrice","mcuObj","materialCost","App","storedMaterials","getItem","parse","setMaterials","storedProducts","setProducts","showMaterialList","showProductList","navigate","useNavigate","src","frameBorder","Link","to","Routes","Route","path","element","materialToDelete","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.40c87e7f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './css/material.css';\r\n\r\nfunction MaterialForm({ isUpdateForm, onAdd, onCancel }) {\r\n  const [name, setName] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    setQuantity(event.target.value);\r\n  };\r\n\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    onAdd({ name, quantity, price });\r\n  };\r\n\r\n  const isFormValid = name !== '' && quantity !== '' && price !== '';\r\n\r\n  return (\r\n    <form className=\"material-form\" onSubmit={handleFormSubmit}>\r\n      <h3 className=\"form-title\">{isUpdateForm ? 'Update Material' : 'Add Material'}</h3>\r\n      <div className=\"form-input\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" value={name} onChange={handleNameChange} required />\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <label htmlFor=\"quantity\">Quantity:</label>\r\n        <input type=\"number\" id=\"quantity\" value={quantity} onChange={handleQuantityChange} required />\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <label htmlFor=\"price\">Price:</label>\r\n        <input type=\"number\" id=\"price\" value={price} onChange={handlePriceChange} required />\r\n      </div>\r\n      <div className=\"form-buttons\">\r\n        <button className=\"form-button form-submit\" type=\"submit\" disabled={!isFormValid}>\r\n          {isUpdateForm ? 'Update' : 'Add'}\r\n        </button>\r\n        <button className=\"form-button form-cancel\" type=\"button\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MaterialForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst MaterialActions = ({ material, onDelete, handleEdit }) => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  return (\r\n    <div className=\"material-actions-container\">\r\n      <button className=\"material-actions-toggle\" onClick={toggleMenu}>\r\n        <i className=\"fas fa-ellipsis-v\"></i>\r\n      </button>\r\n      {showMenu && (\r\n        <div className=\"material-actions-menu\">\r\n          <button className=\"btn btn-sm btn-danger\" onClick={() => onDelete(material)}>\r\n            <i className=\"fas fa-trash\"></i> \r\n          </button>\r\n          <button className=\"btn btn-sm btn-info\" onClick={() => handleEdit(material)}>\r\n            <i className=\"fas fa-pen\"></i> \r\n          </button>\r\n          {/* add additional options here */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialActions;\r\n","import React, { useState } from 'react';\r\nimport MaterialForm from './materialForm';\r\nimport MaterialActions from './materialActions';\r\n//import {StyleSheet} from 'react-native'\r\n//import './materialList.css';\r\n\r\nfunction MaterialList({ materials, onDelete, onUpdate, onAdd }) {\r\n  const [materialToUpdate, setMaterialToUpdate] = useState(null);\r\n  const [key, setKey] = useState(0);\r\n\r\n  const handleEdit = (material) => {\r\n    setMaterialToUpdate(material);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setMaterialToUpdate(null);\r\n    setKey(key + 1);\r\n  };\r\n\r\n  const handleMaterialUpdate = (materialToUpdate, updatedMaterial) => {\r\n    const updatedMaterials = materials.map((material) =>\r\n      material.name === materialToUpdate.name ? updatedMaterial : material\r\n    );\r\n    onUpdate(updatedMaterials);\r\n    setMaterialToUpdate(null);\r\n    setKey(key + 1);\r\n  };\r\n\r\n  const handleMaterialAdd = (newMaterial) => {\r\n    onAdd(newMaterial);\r\n    setMaterialToUpdate(null);\r\n    setKey(key + 1);\r\n  };\r\n\r\n  const getPriceForMaterial = (material) => {\r\n    return material.quantity * material.price;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className='materials-container'>\r\n     <div>{materials.length}</div>\r\n      {materials.map((material) => (\r\n        <div className='material-container' key={material.name}>\r\n          <div className='material-name'>{material.name}</div>\r\n          <div className='material-quantity'>\r\n            <strong>Qty:</strong> {material.quantity}\r\n          </div>\r\n          <div className='material-price'>\r\n            <strong>Price:</strong> {material.price}\r\n          </div>\r\n          <div className='material-ptu'>\r\n            <strong>PTU:</strong> {getPriceForMaterial(material)}\r\n          </div>\r\n          <MaterialActions onDelete={onDelete} onEdit={handleEdit} material={material} />\r\n        </div>\r\n      ))}\r\n\r\n      {materialToUpdate && (\r\n        <div className='material-container'>\r\n          <div className='material-name'>{materialToUpdate.name}</div>\r\n          <div className='material-quantity'>\r\n            <strong>Qty:</strong>{' '}\r\n            <input\r\n              type='number'\r\n              value={materialToUpdate.quantity}\r\n              onChange={(event) => {\r\n                const value = Number(event.target.value);\r\n                const updatedMaterial = { ...materialToUpdate, quantity: value };\r\n                setMaterialToUpdate(updatedMaterial);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='material-price'>\r\n            <strong>Price:</strong>{' '}\r\n            <input\r\n              type='number'\r\n              value={materialToUpdate.price}\r\n              onChange={(event) => {\r\n                const value = Number(event.target.value);\r\n                const updatedMaterial = { ...materialToUpdate, price: value };\r\n                setMaterialToUpdate(updatedMaterial);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='material-ptu'>\r\n            <strong>PTU:</strong> {getPriceForMaterial(materialToUpdate)}\r\n          </div>\r\n          <div className='material-actions'>\r\n            <button className='btn btn-info' onClick={() => handleMaterialUpdate(materialToUpdate, materialToUpdate)}>\r\n              Save\r\n            </button>\r\n            <button className='btn btn-secondary' onClick={handleCancel}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n  </div>\r\n      <MaterialForm\r\n        key={key}\r\n        onAdd={handleMaterialAdd}\r\n        onUpdate={handleMaterialUpdate}\r\n        materialToUpdate={materialToUpdate}\r\n        onCancel={handleCancel}\r\n        isUpdateForm={!!materialToUpdate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MaterialList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './css/material.css'\r\nfunction ProductForm({ materials, onAdd, onUpdate, productToUpdate, onCancel, isUpdateForm }) {\r\n   const [productName, setProductName] = useState(\"\");\r\n   const [selectedOptions, setSelectedOptions] = useState([]);\r\n   const [productQuantity, setProductQuantity] = useState(\"\");\r\n   const [selectedMaterials, setSelectedMaterials] = useState([]);\r\n   const [materialQuantities, setMaterialQuantities] = useState({});\r\n   const [materialInputs, setMaterialInputs] = useState({});\r\n   const [formErrors, setFormErrors] = useState({});\r\n\r\n   useEffect(() => {\r\n      if (productToUpdate) {\r\n         setProductName(productToUpdate.name);\r\n         setProductQuantity(productToUpdate.quantity);\r\n        \r\n      }\r\n   }, [productToUpdate]);\r\n\r\n   const handleProductNameChange = (event) => {\r\n      setProductName(event.target.value);\r\n   };\r\n\r\n   const handleProductQuantityChange = (event) => {\r\n      const value = Number(event.target.value);\r\n\r\n      setProductQuantity(value);\r\n   };\r\n\r\n   const handleQuantityChange = (event, materialName) => {\r\n      const quantity = event.target.value;\r\n\r\n      setMaterialQuantities((prevMaterialQuantities) => ({\r\n         ...prevMaterialQuantities,\r\n\r\n         [materialName]: quantity,\r\n      }));\r\n   };\r\n\r\n   const handleMaterialSelect = (event) => {\r\n      const options = event.target.options;\r\n      const newSelectedMaterials = [];\r\n      const newMaterialQuantities = { ...materialQuantities };\r\n\r\n      for (let i = 0; i < options.length; i++) {\r\n         const option = options[i];\r\n\r\n         if (option.selected) {\r\n            const materialName = option.value;\r\n\r\n            newSelectedMaterials.push(materialName);\r\n\r\n            if (!newMaterialQuantities[materialName]) {\r\n               newMaterialQuantities[materialName] = materials.find((m) => m.name === materialName).defaultQuantity;\r\n            }\r\n         } else {\r\n            const materialName = option.value;\r\n            const index = newSelectedMaterials.indexOf(materialName);\r\n\r\n            if (index > -1) {\r\n               newSelectedMaterials.splice(index, 1);\r\n               delete newMaterialQuantities[materialName];\r\n            }\r\n         }\r\n      }\r\n\r\n      setSelectedMaterials(newSelectedMaterials);\r\n      setMaterialQuantities(newMaterialQuantities);\r\n      setMaterialInputs({});\r\n   };\r\n\r\n   useEffect(() => {\r\n      setFormErrors({});\r\n   }, [selectedMaterials, materialQuantities]);\r\n\r\n   const validateForm = () => {\r\n      const errors = {};\r\n\r\n      if (productName.trim() === \"\") {\r\n         errors.productName = \"Product name is required\";\r\n      }\r\n\r\n      if (productQuantity === \"\") {\r\n         errors.productQuantity = \"Quantity is required\";\r\n      } else if (isNaN(productQuantity)) {\r\n         errors.productQuantity = \"Quantity must be a number\";\r\n      } else if (Number(productQuantity) <= 0) {\r\n         errors.productQuantity = \"Quantity must be greater than 0\";\r\n      }\r\n\r\n      if (selectedMaterials.length === 0) {\r\n         errors.materials = \"At least one material must be selected\";\r\n      }\r\n\r\n      let materialErrors = {};\r\n\r\n      selectedMaterials.forEach((materialName) => {\r\n         if (materialQuantities[materialName] === \"\") {\r\n            materialErrors[materialName] = \"Quantity is required\";\r\n         } else if (isNaN(materialQuantities[materialName])) {\r\n            materialErrors[materialName] = \"Quantity must be a number\";\r\n         } else if (Number(materialQuantities[materialName]) <= 0) {\r\n            materialErrors[materialName] = \"Quantity must be greater than 0\";\r\n         }\r\n      });\r\n\r\n      if (Object.keys(materialErrors).length > 0) {\r\n         errors.materials = materialErrors;\r\n      }\r\n\r\n      setFormErrors(errors);\r\n\r\n      return Object.keys(errors).length === 0;\r\n   };\r\n\r\n   const handleAddProduct = (event) => {\r\n      event.preventDefault();\r\n\r\n      const isValid = validateForm();\r\n\r\n      if (isValid) {\r\n         const selectedMaterialObjects = selectedMaterials.map((materialName) => {\r\n            const material = materials.find((m) => m.name === materialName);\r\n\r\n            return { ...material, quantity: Number(materialQuantities[materialName]) };\r\n         });\r\n\r\n         const materialsCost = selectedMaterialObjects.reduce(\r\n            (total, material) => total + material.quantity * material.price,\r\n\r\n            0\r\n         );\r\n\r\n         const price = (materialsCost / Number(productQuantity)).toFixed(2);\r\n\r\n         const newProduct = {\r\n            name: productName,\r\n            quantity: Number(productQuantity),\r\n            materials: selectedMaterialObjects,\r\n            price: price,\r\n         };\r\n\r\n         onAdd(newProduct);\r\n\r\n         setProductName(\"\");\r\n\r\n         setProductQuantity(\"\");\r\n\r\n         setSelectedMaterials([]);\r\n\r\n         setMaterialQuantities({});\r\n      }\r\n   };\r\n\r\n   return (\r\n      <form className=\"add-product-form\" onSubmit={handleAddProduct}>\r\n         <h3>{isUpdateForm ? \"Update Product\" : \"Add Product\"}</h3>\r\n         <div>\r\n            <label htmlFor=\"productName\">Product Name:</label>\r\n\r\n            <input type=\"text\" id=\"productName\" value={productName} onChange={handleProductNameChange} />\r\n\r\n            {formErrors.productName && <p className=\"error-message\">{formErrors.productName}</p>}\r\n         </div>\r\n\r\n         <div>\r\n            <label htmlFor=\"productQuantity\">Quantity:</label>\r\n\r\n            <input type=\"text\" id=\"productQuantity\" value={productQuantity} onChange={handleProductQuantityChange} />\r\n\r\n            {formErrors.productQuantity && <p className=\"error-message\">{formErrors.productQuantity}</p>}\r\n         </div>\r\n\r\n         <div>\r\n            <label htmlFor=\"materials\">Materials:</label>\r\n\r\n            <select className=\"form-control\" id=\"materials\" multiple={true} value={selectedMaterials} onChange={handleMaterialSelect}>\r\n               {materials.map((material) => (\r\n                  <option key={material.name} value={material.name}>\r\n                     {material.name}\r\n                  </option>\r\n               ))}\r\n            </select>\r\n\r\n            {formErrors.materials && typeof formErrors.materials === \"string\" && <p className=\"error-message\">{formErrors.materials}</p>}\r\n\r\n            {formErrors.materials && typeof formErrors.materials === \"object\" && (\r\n               <ul>\r\n                  {selectedMaterials.map((materialName) => (\r\n                     <li className=\"error-message\" key={materialName}>\r\n                        {materialName}: {formErrors.materials[materialName]}\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            )}\r\n         </div>\r\n\r\n         {selectedMaterials.map((materialName) => (\r\n            <div key={materialName}>\r\n               <label htmlFor={`quantity-${materialName}`}>{materialName} Quantity:</label>\r\n               <input type=\"text\" id={`quantity-${materialName}`} value={materialQuantities[materialName] || \"\"} onChange={(event) => handleQuantityChange(event, materialName)} />\r\n               {formErrors.materials && formErrors.materials[materialName] && <p className=\"error-message\">{formErrors.materials[materialName]}</p>}\r\n            </div>\r\n         ))}\r\n\r\n         <div>\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n               <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n         </div>\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default ProductForm;\r\n","import React, { useState } from 'react';\r\n\r\nfunction renderModal(materials, onClose) {\r\n // console.log(materials,'renderModal')\r\n  const show = materials ? \"show\" : \"\";\r\n  return (\r\n    <div className={`modal ${show}`} onClick={onClose}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <h2>Required Materials</h2>\r\n          {Object.entries(materials).map(([material, quantity]) => (\r\n            <div key={material}>\r\n              {material}: {quantity}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductQuantityForm(props) {\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [desiredQuantity, setDesiredQuantity] = useState('');\r\n  const [requiredMaterials, setRequiredMaterials] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleProductChange = (event) => {\r\n    setSelectedProduct(event.target.value);\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    setDesiredQuantity(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (selectedProduct && desiredQuantity) {\r\n      const product = props.products.find((p) => p.name === selectedProduct);\r\n      if (product) {\r\n        const materials = calculateRequiredMaterials(product, desiredQuantity);\r\n        setRequiredMaterials(materials);\r\n        setIsModalOpen(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateRequiredMaterials = (product, desiredQuantity) => {\r\n    const materials = {};\r\n    product.materials.forEach((material) => {\r\n      materials[material.name] = material.quantity * desiredQuantity;\r\n    });\r\n    return materials;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setRequiredMaterials(null);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className='mqc-c form-group'>\r\n      <form className=\"mqc\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"product-select\">Select a product:</label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"product-select\"\r\n            value={selectedProduct}\r\n            onChange={handleProductChange}\r\n          >\r\n            <option value=\"\">-- Select a product --</option>\r\n            {props.products.map((product) => (\r\n              <option key={product.name} value={product.name}>\r\n                {product.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"quantity-input\">Desired quantity:</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"quantity-input\"\r\n            value={desiredQuantity}\r\n            onChange={handleQuantityChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          <i className='fas fa-calculator' />\r\n        </button>\r\n      </form>\r\n      {isModalOpen && renderModal(requiredMaterials, closeModal)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductQuantityForm;\r\n","import React, { useState } from \"react\";\r\nimport ProductForm from \"./productForm\";\r\nimport ProductQuantityForm from \"./productQuantityForm\";\r\nimport { Card, Button, Accordion } from \"react-bootstrap\";\r\nimport './css/product.css'\r\nfunction ProductList({ products, onDelete, onUpdate, materials }) {\r\n  const [productToUpdate, setProductToUpdate] = useState(null);\r\n  const [productsList, setProductsList] = useState(products);\r\n  const [materialsList, setMaterialsList] = useState(materials);\r\n  const [showMaterials, setShowMaterials] = useState(false);\r\n\r\n  const handleEdit = (product) => {\r\n    setProductToUpdate(product);\r\n    console.log(\"handleEdit\", product);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setProductToUpdate(null);\r\n  };\r\n\r\n  const handleProductUpdate = (productToUpdate, updatedProduct) => {\r\n    const updatedProducts = productsList.map((product) => (product === productToUpdate ? updatedProduct : product));\r\n    console.log(productToUpdate, \"pl\");\r\n    onUpdate(updatedProducts);\r\n    setProductToUpdate(null);\r\n    setProductsList(updatedProducts);\r\n  };\r\n\r\n  const handleProductDelete = (productToDelete) => {\r\n    const updatedProducts = productsList.filter((product) => product !== productToDelete);\r\n    onDelete(updatedProducts);\r\n    setProductsList(updatedProducts);\r\n  };\r\n\r\n  const handleProductAdd = (product, selectedMaterials) => {\r\n    const newProduct = {\r\n      id: productsList.length + 1,\r\n      name: product.name,\r\n      materials: product.materials,\r\n      quantity: product.quantity,\r\n      price: product.price,\r\n    };\r\n    setProductsList((prevProducts) => [...prevProducts, newProduct]);\r\n  };\r\n\r\n  const getMaterialsInfo = (selectedMaterials) => {\r\n    if (!selectedMaterials || typeof selectedMaterials !== \"object\") {\r\n      return \"\";\r\n    }\r\n\r\n    const materialsArray = Object.values(selectedMaterials).map((material) => (\r\n      <div className=\"material-item\" key={material.name}>\r\n        <div className=\"material-name\">{material.name}</div>\r\n        <div className=\"material-quantity\">{material.quantity}</div>\r\n      </div>\r\n    ));\r\n\r\n    if (materialsArray.length === 0) {\r\n      return \"\";\r\n    }\r\n\r\n    return <div className=\"material-list\">{materialsArray}</div>;\r\n  };\r\n\r\n  function calculateCosts(product) {\r\n    let total = 0;\r\n    product.materials.forEach((material) => {\r\n      total += material.price * (material.quantity / product.quantity);\r\n    });\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <div className=\"product-list\">\r\n        {productsList.map((product, index) => (\r\n          <div className=\"product-card\" key={`${product.name}-${index}`}>\r\n            <div className=\"product-header\">\r\n              <div className=\"product-name\">{product.name}</div>\r\n              <div className=\"product-cost\">${calculateCosts(product)}</div>\r\n            </div>\r\n            <div className=\"product-body\">\r\n              <div className=\"product-materials\">\r\n                <div className=\"materials-header\">\r\n                  <div>Materials:</div>\r\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => setShowMaterials(!showMaterials)}>\r\n                    {showMaterials ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </div>\r\n                {showMaterials && getMaterialsInfo(product.materials)}\r\n              </div>\r\n             \r\n              <div className=\"product-buttons\">\r\n                <Button variant=\"outline-primary\" onClick={() => handleEdit(product)}>\r\n                  Edit\r\n                </Button>\r\n                <Button variant=\"outline-danger\" onClick={() => handleProductDelete(product)}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      {productToUpdate ? (\r\n        <ProductForm product={productToUpdate} onCancel={handleCancel} onUpdate={handleProductUpdate} onAdd={handleProductAdd} materials={materialsList} />\r\n      ) : (\r\n        <div>\r\n          <h3>Products</h3>\r\n          {renderProducts()}\r\n          <ProductForm onCancel={handleCancel} onUpdate={handleProductUpdate} onAdd={handleProductAdd} materials={materialsList} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from \"react\";\r\n\r\nfunction LocalStorageHandler({ materials, products }) {\r\n    useEffect(() => {\r\n      localStorage.setItem('materials', JSON.stringify(materials));\r\n    }, [materials]);\r\n  \r\n    useEffect(() => {\r\n      localStorage.setItem('products', JSON.stringify(products));\r\n    }, [products]);\r\n  \r\n    return null;\r\n  }\r\n  \r\n  \r\n\r\nexport default LocalStorageHandler;\r\n","export const initialMaterials = [\r\n    { name: 'Water', quantity: 100, price: 5 ,id: 1},\r\n    { name: 'Sugar', quantity: 500, price: 20 ,id: 2},\r\n    { name: 'Lemon Juice', quantity: 250, price: 15 ,id:3},\r\n  ];\r\n  \r\n  export const initialProducts = [\r\n    {\r\n      name: 'Lemonade',\r\n      id: 0,\r\n      materials: [\r\n        { name: 'Water', quantity: 100, price: 300},\r\n        { name: 'Sugar', quantity: 50, price: 20 },\r\n        { name: 'Lemon Juice', quantity: 25, price: 15 }\r\n      ],\r\n      quantity :10,\r\n      price: 0,\r\n      mcu: 0,\r\n      \r\n    },\r\n    {\r\n      name: 'Ice Tea',\r\n      id: 1,\r\n      materials: [\r\n        { name: 'Water', quantity: 100, price: 50 },\r\n        { name: 'Tea Leaves', quantity: 50, price: 30 },\r\n        { name: 'Sugar', quantity: 25, price: 20 }\r\n      ],\r\n      quantity: 20,\r\n      price: 0,\r\n      mcu: 0,\r\n     \r\n    }\r\n  ];\r\n  \r\n  initialProducts.forEach(product => {\r\n    let totalPrice = 0;\r\n    let mcuObj = {};\r\n    \r\n    product.materials.forEach(material => {\r\n      const materialCost = material.quantity * material.price;\r\n      totalPrice += materialCost;\r\n      \r\n      const mcu = material.price * material.quantity /product.quantity;\r\n      mcuObj[material.name] = mcu;\r\n    });\r\n  \r\n    product.price = totalPrice;\r\n    product.mcu = mcuObj;\r\n  });\r\n  ","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MaterialForm from './materialForm';\r\nimport MaterialList from './materialList';\r\nimport ProductForm from './productForm';\r\nimport ProductList from './productList';\r\nimport ProductQuantityForm from './productQuantityForm';\r\nimport LocalStorageHandler from './save';\r\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\r\nimport { initialMaterials, initialProducts } from './obj.js';\r\n\r\n\r\nfunction App() {\r\n  const [materials, setMaterials] = useState(() => {\r\n    const storedMaterials = localStorage.getItem('materials');\r\n    return storedMaterials ? JSON.parse(storedMaterials) : initialMaterials;\r\n  });\r\n  const [products, setProducts] = useState(() => {\r\n    const storedProducts = localStorage.getItem('products');\r\n    return storedProducts ? JSON.parse(storedProducts) : initialProducts;\r\n  });\r\n  const [showMaterialList, setShowMaterialList] = useState(false);\r\n  const [showProductList, setShowProductList] = useState(false);\r\n  const handleUpdate = (updatedMaterials) => {\r\n    setMaterials(updatedMaterials);\r\n  };\r\n\r\n  const handleDelete = (materialToDelete) => {\r\n    setMaterials(materials.filter((material) => material !== materialToDelete));\r\n  };\r\n\r\n  const handleAdd = (newMaterial) => {\r\n    setMaterials([...materials, newMaterial]);\r\n  };\r\n\r\n  const handleAddProduct = (newProduct) => {\r\n    setProducts([...products, newProduct]);\r\n  };\r\n\r\n  const handleUpdateProduct = (productToUpdate, updatedProduct) => {\r\n    const updatedProducts = products.map((product) =>\r\n      product === productToUpdate ? updatedProduct : product\r\n    );\r\n    setProducts(updatedProducts);\r\n  };\r\n\r\n  const handleDeleteProduct = (productToDelete) => {\r\n    setProducts(products.filter((product) => product !== productToDelete));\r\n  };\r\n  \r\n  const handleMaterialClick = () => {\r\n    setShowMaterialList(true);\r\n    setShowProductList(false);\r\n  };\r\n\r\n  const handleProductClick = () => {\r\n    setShowMaterialList(false);\r\n    setShowProductList(true);\r\n  };\r\n\r\n  const navigate = useNavigate(); // use the useNavigate hook to navigate\r\n\r\n  return (\r\n   \r\n    <div className='app-container'>\r\n      <div className='date-time'>\r\n      <iframe src=\"https://www.now-time.com/widgetclock/justnumber.php?id=9491&size=33&color=1833AB&format=2&thedatein=5&backcolor=F2F2F2\" frameBorder=\"0\"></iframe>\r\n      </div>\r\n      <LocalStorageHandler materials={materials} products={products} />\r\n      <div className='menu-container'>\r\n      <Link to='materials' className={`menu-item ${showMaterialList ? 'active' : ''}`}>\r\n        <i className='fas fa-box-open'></i>\r\n        <span>Materials</span>\r\n      </Link>\r\n      <Link to='products' className={`menu-item ${showProductList ? 'active' : ''}`}>\r\n        <i className='fas fa-box'></i>\r\n        <span>Products</span>\r\n      </Link>\r\n      <button className='back-btn' onClick={() => navigate(-1)}><i className=\"fas fa-arrow-left\"></i> Back</button> {/* Add the back button */}\r\n    </div>\r\n      <Routes>\r\n        <Route path='materials' element={<MaterialList materials={materials} onDelete={handleDelete} onUpdate={handleUpdate} onAdd={handleAdd} />} />\r\n        <Route path='products' element={<ProductList products={products} onDelete={handleDeleteProduct} onUpdate={handleUpdateProduct} onAdd={handleAddProduct} materials={materials} />} />\r\n        {/* Add more routes as needed */}\r\n      </Routes>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\nimport './css/app.css'\nimport './css/native.css'\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}